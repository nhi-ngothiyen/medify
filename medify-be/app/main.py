# app/main.py
from datetime import datetime, timezone

from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware

from app.routers import auth, doctors, appointments, reviews, admin

# (T√πy ch·ªçn) N·∫øu b·∫°n mu·ªën d√πng settings cho c√°c c·∫•u h√¨nh kh√°c:
# from app.config import settings
# from app.db import Base, engine  # Khi d√πng Alembic, KH√îNG create_all()

tags_metadata = [
    {"name": "auth", "description": "ƒêƒÉng k√Ω / ƒëƒÉng nh·∫≠p, c·∫•p JWT"},
    {"name": "doctors", "description": "T√¨m ki·∫øm, xem h·ªì s∆° b√°c sƒ©"},
    {"name": "appointments", "description": "Qu·∫£n l√Ω l·ªãch h·∫πn"},
    {"name": "reviews", "description": "ƒê√°nh gi√° sau kh√°m"},
    {"name": "admin", "description": "Qu·∫£n tr·ªã h·ªá th·ªëng (ch·ªâ Admin)"},
]

app = FastAPI(
    title="Medify API",
    version="0.1.0",
    openapi_tags=tags_metadata,
)

# --- CORS: cho Flutter (mobile/web) & Admin (web) ---
# Th√™m origin b·∫°n d√πng th·ª±c t·∫ø (Vite/Next/Flutter web) v√†o ƒë√¢y
origins = [
    "http://localhost",
    "http://127.0.0.1",
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    "http://localhost:5173",
    "http://127.0.0.1:5173",
    "http://localhost:8080",
    "http://127.0.0.1:8080",
    # B·∫°n c√≥ th·ªÉ b·ªï sung origin kh√°c n·∫øu c·∫ßn
]

app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# --- KH√îNG t·∫°o b·∫£ng khi d√πng Alembic ---
# from app.db import Base, engine
# Base.metadata.create_all(bind=engine)  # ‚ùå Kh√¥ng b·∫≠t khi d√πng Alembic


# --- Lifespan logs (t√πy ch·ªçn) ---
@app.on_event("startup")
def on_startup():
    print("üöÄ Medify API started")

@app.on_event("shutdown")
def on_shutdown():
    print("üõë Medify API stopped")


# --- Health & Root ---
@app.get("/", tags=["auth"])
def root():
    return {"message": "‚úÖ Medify API is running successfully!"}

@app.get("/health", tags=["auth"])
def health():
    return {
        "status": "ok",
        "time_utc": datetime.now(timezone.utc).isoformat(),
        "services": {
            "api": "up",
            # B·∫°n c√≥ th·ªÉ b·ªï sung ping DB n·∫øu mu·ªën
        },
    }


# --- Routers ---
app.include_router(auth.router)
app.include_router(doctors.router)
app.include_router(appointments.router)
app.include_router(reviews.router)
app.include_router(admin.router)
